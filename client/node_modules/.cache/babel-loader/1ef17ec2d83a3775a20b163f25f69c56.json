{"ast":null,"code":"var _jsxFileName = \"/home/amyou/WebstormProjects/chat-app/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:8888';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n        window.location = '/';\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.disconnect();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages(msgs => [...msgs, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(TextContainer, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/amyou/WebstormProjects/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","window","disconnect","on","msgs","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n\tconst [name, setName] = useState('');\n\tconst [room, setRoom] = useState('');\n\tconst [users, setUsers] = useState('');\n\tconst [message, setMessage] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst ENDPOINT = 'http://localhost:8888';\n\n\tuseEffect(() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\n\t\tsocket = io(ENDPOINT);\n\n\t\tsetRoom(room);\n\t\tsetName(name);\n\n\t\tsocket.emit('join', { name, room }, (error) => {\n\t\t\tif(error) {\n\t\t\t\talert(error);\n\t\t\t\twindow.location = '/';\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocket.emit('disconnect');\n\n\t\t\tsocket.disconnect();\n\t\t}\n\n\t}, [ENDPOINT, location.search]);\n\n\tuseEffect(( ) => {\n\n\t\tsocket.on(\"message\", message => {\n\n\t\t\tsetMessages(msgs => [...msgs, message]);\n\n\t\t});\n\n\t\tsocket.on(\"roomData\", ({ users }) => {\n\n\t\t\tsetUsers(users);\n\n\t\t});\n\n\t},  [ ]);\n\n\tconst sendMessage = (event) => {\n\n\t\tevent.preventDefault();\n\n\t\tif(message) {\n\t\t\tsocket.emit('sendMessage', message, () => setMessage(''));\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"outerContainer\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<InfoBar room={room} />\n\t\t\t\t<Messages messages={messages} name={name} />\n\t\t\t\t<Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n\t\t\t</div>\n\t\t\t<TextContainer users={users}/>\n\t\t</div>\n\t);\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}